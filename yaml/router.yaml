apiVersion: eventing.knative.dev/v1alpha1
kind: Source
metadata:
  name: source
  namespace: default
spec:
  provisioner:
    ...
  channel:
    apiVersion: eventing.knative.dev/v1alpha1
    kind: Channel
    name: source-channel

---

apiVersion: eventing.knative.dev/v1alpha1
kind: Channel
metadata:
  name: source-channel
  namespace: default
spec:
  ...


---

apiVersion: eventing.knative.dev/v1alpha1
kind: Subscription
metadata:
  name: transformer
  namespace: default
spec:
  from:
    apiVersion: eventing.knative.dev/v1alpha1
    kind: Channel
    name: source-channel
  call:
    target:
      apiVersion: serving.knative.dev/v1alpha1
      kind: Service
      # Combination of a transformer and a router. It will return the event to send on, along with a label in a well known location.
      name: routing-function
  result:
    targets:
      # A possible alternative to using a single, well-known location. Allow it to be specified using some language, this example uses JSON Path.
      labelLookup: $.body.foo.bar[0]
      # match the label to a key in routes. If there is a match, use that objectRef. If there is no match, then use default.
      routes:
        red:
          apiVersion: eventing.knative.dev/v1alpha1
          kind: Channel
          name: red-downstream
        green:
          apiVersion: eventing.knative.dev/v1alpha1
          kind: Channel
          name: green-downstream
      default:
        apiVersion: eventing.knative.dev/v1alpha1
        kind: Channel
        name: default-downstream

